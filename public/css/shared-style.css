/*
 * GENERAL
 */

* {
    text-decoration: none;
    font-family: 'Raleway', sans-serif;
}

*, ::before, ::after {
    box-sizing: border-box; /* accounts for width after padding */
}

body {
    margin: 0;
}

:focus {
    outline: none;
}

button {
    cursor: pointer;
    border: none;
}

input[type="password"] {
    font: large Verdana, sans-serif;
}

/*
 * Autofill Styling
 */
input:-webkit-autofill,
input:-webkit-autofill:hover, 
input:-webkit-autofill:focus,
textarea:-webkit-autofill,
textarea:-webkit-autofill:hover,
textarea:-webkit-autofill:focus,
select:-webkit-autofill,
select:-webkit-autofill:hover,
select:-webkit-autofill:focus {
  -webkit-text-fill-color: #333;
  box-shadow: none;
  transition: background-color 5000s ease-in-out 0s;
}

 /* 
  * ScrollBar 
  */
body::-webkit-scrollbar,
.scrollbar::-webkit-scrollbar,
.round-scrollbar::-webkit-scrollbar {
    width: 16px;
}
.round-scrollbar::-webkit-scrollbar-track,
.round-scrollbar::-webkit-scrollbar-thumb {
    border-radius: 8px;
}
body::-webkit-scrollbar-track,
.scrollbar::-webkit-scrollbar-track,
.round-scrollbar::-webkit-scrollbar-track {
    background: #e1e1e1; 
}
body::-webkit-scrollbar-thumb,
.scrollbar::-webkit-scrollbar-thumb,
.round-scrollbar::-webkit-scrollbar-thumb {
    background: #bbb; 
}
body::-webkit-scrollbar-thumb:hover,
.scrollbar::-webkit-scrollbar-thumb:hover,
.round-scrollbar::-webkit-scrollbar-thumb:hover {
    background: #aaa;
}
body::-webkit-scrollbar-thumb:active,
.scrollbar::-webkit-scrollbar-thumb:active,
.round-scrollbar::-webkit-scrollbar-thumb:active {
    background: #999; 
}

/*
 * True CSS Class Use
 * - Create more reusable code. It's really important in reducing the amount of CSS to maintain.
 *		o ie. `.lightgreen: { color: #B1FF54 }`
 *			> The purpose of this is so you don't have to repeat `color: #B1FF54` across every 
 * 				styling and use lightgreen as a class instead on the HTML element directly
 *		o A more practical case is when you can reuse styling for buttons by literally just
 *			doing `class="fancy-button"`
 *		o Off topic, but SASS/SCSS CSS preprocessors both support variables that can fix this problem
 *			by just doing: `$lightgreen: #B1FF54; ... .button { color: $lightgreen }` but the whole 
 *			point is you can't do the same for button example shown above
 *
 * - Tips:
 * 		o View HTML as your canvas and CSS as your API
 *		o Another way to look a it is seeing CSS as functions and HTML as function calls
 *			> You don't want to hardcode every function specific for everything you're doing
 *
 * - Important Messages:
 *      o CSS is not a language that offers a lot of flexibility. You have to create it yourself.
 *          But don't get carried away in merging styles like `.button.lightgreen` to create styles
 *          specific to a lightgreen button. (That's where BEM helps in maintaining that!) You can 
 *          only override so many styles before you begin to use `!important` and that's def a problem
 *
 * - Final Note:
 *      o Sometimes it isn't worth to hassle/time to create separate reusable styling for something 
 *          super specific like a landing page. Use your best judgement!
 *
 * - Note: If styles not already created, add new styles to your API
 * - Additional Note: Someone used BEM and that's legit and offers even more scalability
 *
 * #TODO: REFACTOR CODE TO FOLLOW THIS STYLE **FOR GOOD PRACTICE** :) So far we only have that below :(
 */

/* ============== General Constants */
.lightblue {
    background-color:  #2f3542;
}

/*
 * Generic Hidden
 */
.hidden {
    display: none !important;
}

/**
 * TRANSITION HIDDENS
 * - General Use: 
 *      > place potato on element.
 *      > toggle driver.
 * - Note: There are a couple of exceptions. read corresponding description for more info 
 */

/*
 * Slidein Hidden
 * - Use: (exception)
 *      place potato on element
 *      toggle by setting max-height:scrollheight through js
 */
.hidden-slidein-potato {
    transition: max-height 0.15s ease-out;
    max-height: 0;
    overflow: hidden;
}

/* 
 * Fadein Hidden
 * - Use: (same as general)
 *      place potato on element
 *      toggle driver through js
 * - Notes: 
 *      if a slide down effect occurs, it's because the element likely has 'transition: ease all' on it
 */
.hidden-fadein-potato {
    transition: visibility 0s, opacity 500ms ease;
}
.hidden-fadein-driver,
.hidden-fadein-driver * {
    visibility: hidden !important;
    height: 0 !important;
    padding: 0 !important;
    margin: 0 !important;
    border: none !important;
    opacity: 0 !important;
}
/* END HIDDENS */

.auto-overflow {
    overflow: auto;
    height: 100%;
}


/* ================== Position Formatting */
.main-card {
	display: flex;
    align-items: center;
    justify-content: center;
}
.main-card-inner {
    max-width: 900px;
}

.popup-window {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 101;
    background: #0006
}

.popup-window-inner {
    margin-left: auto;
    margin-right: auto;
    border-radius: 10px;
    position: absolute;
    top: 72px;
    left: 72px;
    right: 72px;
    max-width: 900px;
    height: calc(100% - 144px);
    background: #eee;
}
.popup-close {
    display: block;
    position: absolute;
    width: 60px;
    height: 60px;
    background: none;
}
.popup-close:hover i {
    color: #555;
}
.popup-close i { 
    font-size: 28px;
    color: #888;
    transition: 0.2s ease all
}

.center-block-elem {
    display: block;
	margin: 0 auto;
}

.min-fill-screen-y {
	/* height 100% might not work as expected; seems to only work starting from <html> */
    min-height: 100vh;
}
.fill-screen-y-head-foot {
    height: calc(100vh - 400px)
}


/* ============= Specific Element Types */
 


.fancy-button {
	content: 'I am fancy'
}
.fancy-button:hover {
	content: 'ooOh'
}

/*
 * Form Styling
 */
.form-bar {
    padding: 10px 0;
    margin: 0 auto;
    width: 75%;
    position: relative;
}
.form-bar .form-input {
    margin: 10px 0;
    padding: 20px;
    border: 1.5px solid #777;
    border-radius: 6px;
    width: 100%;
    font-size: 16px;
    background: none;
    transition: border 0.25s ease;
}
.form-bar .form-input-placeholder {
	position: absolute;
    pointer-events: none;
    left: 20px;
    top: 40px;
    color: #777;
    transition: 0.25s ease all; /* all may leave problems esp with .hidden-transition-potato */
}
.form-input:focus,
.form-input:not(:focus):valid {
    border: 1.5px solid #000;
}
.form-input:focus ~ .form-input-placeholder,
.form-input:not(:focus):valid ~ .form-input-placeholder {
    top: 0.5em;
    left: 1em;
    font-size: 14px;
    padding: 5px;
    background-color: #eee;
    color: #000;
}
.error-message {
    text-align: center;
    background-color: #FFDDD6bb;
    border: none;
    color: #b00;
    border: 1px solid #b00;
    border-radius: 6px;
}
.submit-button {
    cursor: pointer;
    margin-top: 30px;
    font-size: 15px;
    padding: 15px 20px;
    background-color: #333;
    color: white;
    border: none;
    border-radius: 25px;
    width: 60%;
    transition: background-color 250ms;
}

.submit-button:hover{
    background-color: #2c3e50;
}
/* END Input form Styling */


/* ================== HEADER */
.header {  
    z-index: 100; 
    height: 135px; 
    position: relative;  
} 

/*Container for logo */
.header__logo-box{  
    padding-top: .5%; 
    padding-left:1.5%;  
} 

/* the logo link */
.header__logo{
    position: absolute;
    height: 90%;
}

.header__logo img {
    height: 100%;
}

  /*The container for the text in the header*/  
.header__text-box {  
    width:100%; 
    height:auto;  
    position: absolute; 
      
} 

/*The actual text*/ 
.header__text{  
    margin-top: 25px;
    color: white; 
    text-align: center; 
}

/*Container for buttons*/ 
.button-container {  
    text-align: right;  
    padding-right:1%; 
}

.nav-button {
    padding: 8px 12px;
    margin: 0 5px;
    font-size: 16px;
    color: white;
    background: none;
    cursor: pointer;
    border: none;
    transition: color 250ms;
}

.nav-button:hover {
    color: #aaa;
}

.button__take-action {
    background: #994532;
    border-radius: 3px;
    transition: background 250ms;
}

.button__take-action:hover {
    color: #fff;
    background: #753426;
}

/* =================== FOOTER */
.social-media {
    padding: 40px;
    text-align: center;
}

.social-media-title {
    margin-bottom: 20px;
    color: white;
    font-size: 24px;
}

.social-media-icons {
    margin: 0 auto;
    margin-bottom: 20px;
    width: 200px;
}

.social-media-icons:hover > * {
    opacity: 0.6;
}

.logo {
    border-radius: 50%;
    margin: 5px;
    width: 32px;
    height: 32px;
    display: inline-block;
    background-color: white;
    color: black;
    transition: opacity 250ms;
}

.logo i {
    padding-top: 25%;
}

.logo:nth-child(1):hover,
.logo:nth-child(2):hover,
.logo:nth-child(3):hover,
.logo:nth-child(4):hover { opacity: 1; }

.sub-email {
    border: none;
    margin: 10px;
    padding: 10px;
    width: 250px;
    border-top: solid 1px white;
    border-bottom: solid 1px white;
    background: none;
    color: white;
}

.sub-email::placeholder {
    color: white;
}

.subscribe {
    border: none;
    border-radius: 5px;
    padding: 10px 30px;
    background-color: white;
    cursor: pointer;
    transition: background-color 250ms;
}

.subscribe:hover {
    background-color: #ccc;
}

.lower-info {
    padding: 10px;
    color: white;
    text-align: center;
}
